# ==================================================================
# maintrainer: Chuanbin Liu (liucb92@ustc.edu.cn)
# img tag: liuboss/pami:liucb-py38-cuda111-torch1101-conda
# ------------------------------------------------------------------
# Core features
# ------------------------------------------------------------------
# python        3.8     
# pytorch       1.10.1
# torchvision   0.11.2
# conda         py311_23.5.2
# ------------------------------------------------------------------
# BTW
# I also build a "base img" without STEP 3&4, so you can install torch and conda with your fancy, tagged as liuboss/pami:liucb-py38-cuda111-base
# ==================================================================

FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04

ENV DEBIAN_FRONTEND noninteractive
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH PATH=/usr/local/cuda-11.1/bin:$PATH
ENV LC_ALL=C
ENV TZ=Asia/Shanghai

# ==================================================================
# KEY STEP 1
# Ubuntu apt
# ------------------------------------------------------------------

RUN sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list && \
    APT_INSTALL="apt-get install -y --no-install-recommends" && \
    PIP_INSTALL="python -m pip --no-cache-dir install --upgrade -i https://mirrors.aliyun.com/simple " && \
    rm -rf /var/lib/apt/lists/* \
        /etc/apt/sources.list.d/cuda.list \
        /etc/apt/sources.list.d/nvidia-ml.list && \
    apt-get update && \
    $APT_INSTALL \
        build-essential \
        apt-utils \
        cmake \
        git \
        wget \
        libatlas-base-dev \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libleveldb-dev \
        liblmdb-dev \
        libopencv-dev \
        libprotobuf-dev \
        libsnappy-dev \
        protobuf-compiler \
        nano \
        libopenblas-dev \
        liblapack-dev \
        python-tk \
        openssh-client \
        openssh-server \
        autossh \
        expect && \
    $APT_INSTALL libboost-all-dev && \
    $APT_INSTALL libopenblas-dev \
        liblapack-dev \
        libatlas-base-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        liblmdb-dev \
        gfortran && \
    $APT_INSTALL git \
        libprotobuf-dev \
        libleveldb-dev \
        libsnappy-dev \
        libopencv-dev \
        libboost-all-dev \
        libhdf5-serial-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        liblmdb-dev \
        protobuf-compiler \
        protobuf-c-compiler \
        libyaml-dev \
        libffi-dev \
        libssl-dev \
        liblmdb-dev \
        time \
        vim \
        screen \
        sudo \
        tmux

# ==================================================================
# KEY STEP 2
# python3.8 & pip 
# ------------------------------------------------------------------

RUN APT_INSTALL="apt-get install -y --no-install-recommends" && \
    PIP_INSTALL="python -m pip --no-cache-dir install --upgrade -i https://mirrors.aliyun.com/simple " && \
    $APT_INSTALL \
        software-properties-common python3-pip && \
    ln -s /usr/bin/python3.8 /usr/local/bin/python3 && \
    ln -s /usr/bin/python3.8 /usr/local/bin/python && \
    mkdir ~/.pip && echo "[global]" > ~/.pip/pip.conf && \
    echo "index-url=https://mirrors.aliyun.com/pypi/simple" >> ~/.pip/pip.conf && \
    echo "format = columns" >> ~/.pip/pip.conf && \
    $PIP_INSTALL \
        setuptools &&\
    pip --default-timeout=100 install \
        numpy \
        leveldb \
        h5py \
        tqdm \
        fire \
        cffi \
        cython \
        ipython \
        SimpleITK \
        pydicom \
        lmdb \
        Cython \
        imageio \
        easydict \
        pandas \
        jupyter \
        jupyterlab \
        python-gflags \
        networkx \
        pyyaml \
        pillow \
        visdom \
        protobuf \
        wheel \
        nose \
        Pillow \
        six \
        imageio \
        packaging \
        urllib3 \
        numba \
        seaborn \
        hypertools \
        fasteners \
        fjcommon \
        decorator \
        dominate requests \
        cffi \
        datetime \
        scipy \
        matplotlib \
        virtualenv \
        ipdb \
        opencv-python \
        scikit-learn \
        scikit-image \
        scikit-video \
        yacs
        
# ==================================================================
# KEY STEP 3
# torch torchvision Miniconda
# ------------------------------------------------------------------

RUN pip --default-timeout=10000 install torch==1.10.1+cu111 torchvision==0.11.2+cu111 -f https://download.pytorch.org/whl/torch_stable.html &&\
    pip --default-timeout=10000 install tensorboardX \
    timm && \
    mkdir -p ~/conda && \
    wget https://mirrors.bfsu.edu.cn/anaconda/miniconda/Miniconda3-py311_23.5.2-0-Linux-x86_64.sh -O ~/conda/miniconda.sh && \
    bash ~/conda/miniconda.sh -b -p /opt/conda && \
    rm -rf ~/conda

# ==================================================================
# KEY STEP 4
# Add my UID for USTC GPU cluster @ https://git.ustc.edu.cn/ypb/gpu-cluster
# ------------------------------------------------------------------

ARG USER_ID=1082

RUN groupadd wheel && \
    useradd -m --no-log-init --system  --uid ${USER_ID} liucb -g sudo && \
    echo 'liucb ALL=(ALL) ALL' >> /etc/sudoers && \
    groupadd -g ${USER_ID} liucb && \
    usermod -aG wheel liucb && \
    sed -i '19s/# a/a/g' /etc/pam.d/su

# ==================================================================
# KEY STEP 5
# config & cleanup
# ------------------------------------------------------------------

RUN ldconfig && \
    apt-get -y clean && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/* ~/*

EXPOSE 6006

WORKDIR    /
# ==================================================================

